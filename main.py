import os
import logging
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    ContextTypes,
    filters,
)

# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
BOT_TOKEN   = os.environ["TELEGRAM_BOT_TOKEN"]
LOG_CHAT_ID = int(os.environ["LOG_CHAT_ID"])
WEBHOOK_URL = os.environ["WEBHOOK_URL"]  # https://<—Ç–≤—ñ–π-—Å–µ—Ä–≤—ñ—Å>.onrender.com

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Flask
app = Flask(__name__)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Telegram Application (–≤—ñ–Ω –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Å—Ç–≤–æ—Ä—é—î Dispatcher)
application = (
    ApplicationBuilder()
    .token(BOT_TOKEN)
    .build()
)

# –§—É–Ω–∫—Ü—ñ—è-–æ–±—Ä–æ–±–Ω–∏–∫ –±—É–¥—å-—è–∫–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
async def handle_all(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user    = update.effective_user
    message = update.message
    header  = (
        f"‚úâÔ∏è –ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {user.full_name} (@{user.username})\n"
        f"üÜî {user.id}  üïì {message.date}\n"
    )

    if message.text:
        await context.bot.send_message(
            chat_id=LOG_CHAT_ID,
            text=header + f"\nüìÑ –¢–µ–∫—Å—Ç:\n{message.text}"
        )

    if message.photo:
        file_id = message.photo[-1].file_id
        await context.bot.send_photo(
            chat_id=LOG_CHAT_ID,
            photo=file_id,
            caption=header + f"\nüñº –§–æ—Ç–æ: {message.caption or '‚Äî'}"
        )

    if message.video:
        file_id = message.video.file_id
        await context.bot.send_video(
            chat_id=LOG_CHAT_ID,
            video=file_id,
            caption=header + f"\nüé• –í—ñ–¥–µ–æ: {message.caption or '‚Äî'}"
        )

    if message.document:
        file_id = message.document.file_id
        await context.bot.send_document(
            chat_id=LOG_CHAT_ID,
            document=file_id,
            caption=header + f"\nüìé –§–∞–π–ª: {message.document.file_name}"
        )

    await message.reply_text("–î—è–∫—É—î–º–æ, –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ!")

# –†–µ–≥—ñ—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫
application.add_handler(
    MessageHandler(filters.ALL & ~filters.COMMAND, handle_all)
)

# HTTP-–µ–Ω–¥–ø–æ–π–Ω—Ç –¥–ª—è webhook
@app.route(f"/{BOT_TOKEN}", methods=["POST"])
def webhook_handler():
    data = request.get_json(force=True)
    update = Update.de_json(data, application.bot)
    # –ø–µ—Ä–µ–¥–∞—î–º–æ –∞–ø–¥–µ–π—Ç —É Telegram Application
    application.process_update(update)
    return "OK"

if __name__ == "__main__":
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ webhook –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ
    application.bot.set_webhook(f"{WEBHOOK_URL}/{BOT_TOKEN}")
    # –ü—ñ–¥–Ω—ñ–º–∞—î–º–æ Flask-—Å–µ—Ä–≤–µ—Ä
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)
